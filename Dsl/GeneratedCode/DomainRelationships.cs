//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace CE.DGH_DGC_SOM_IKP
{
	/// <summary>
	/// DomainRelationship AplicacionIPKHasImagen
	/// Description for CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen
	/// </summary>
	[DslDesign::DisplayNameResource("CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen.DisplayName", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen.Description", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("1010c907-a9d8-46d1-8652-8ee03a99211e")]
	public partial class AplicacionIPKHasImagen : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// AplicacionIPKHasImagen domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x1010c907, 0xa9d8, 0x46d1, 0x86, 0x52, 0x8e, 0xe0, 0x3a, 0x99, 0x21, 0x1e);
	
				
		/// <summary>
		/// Constructor
		/// Creates a AplicacionIPKHasImagen link in the same Partition as the given AplicacionIPK
		/// </summary>
		/// <param name="source">AplicacionIPK to use as the source of the relationship.</param>
		/// <param name="target">Imagen to use as the target of the relationship.</param>
		public AplicacionIPKHasImagen(AplicacionIPK source, Imagen target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(AplicacionIPKHasImagen.AplicacionIPKDomainRoleId, source), new DslModeling::RoleAssignment(AplicacionIPKHasImagen.ImagenDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public AplicacionIPKHasImagen(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public AplicacionIPKHasImagen(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public AplicacionIPKHasImagen(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public AplicacionIPKHasImagen(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region AplicacionIPK domain role code
		
		/// <summary>
		/// AplicacionIPK domain role Id.
		/// </summary>
		public static readonly global::System.Guid AplicacionIPKDomainRoleId = new global::System.Guid(0x0080aeb5, 0x262b, 0x4366, 0xb0, 0x7b, 0x78, 0xdd, 0x00, 0xd2, 0x58, 0x37);
		
		/// <summary>
		/// DomainRole AplicacionIPK
		/// Description for CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen.AplicacionIPK
		/// </summary>
		[DslDesign::DisplayNameResource("CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen/AplicacionIPK.DisplayName", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen/AplicacionIPK.Description", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Imagen", PropertyDisplayNameKey="CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen/AplicacionIPK.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("0080aeb5-262b-4366-b07b-78dd00d25837")]
		public virtual AplicacionIPK AplicacionIPK
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (AplicacionIPK)DslModeling::DomainRoleInfo.GetRolePlayer(this, AplicacionIPKDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, AplicacionIPKDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access AplicacionIPK of a Imagen
		/// <summary>
		/// Gets AplicacionIPK.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static AplicacionIPK GetAplicacionIPK(Imagen element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ImagenDomainRoleId) as AplicacionIPK;
		}
		
		/// <summary>
		/// Sets AplicacionIPK.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetAplicacionIPK(Imagen element, AplicacionIPK newAplicacionIPK)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ImagenDomainRoleId, newAplicacionIPK);
		}
		#endregion
		#region Imagen domain role code
		
		/// <summary>
		/// Imagen domain role Id.
		/// </summary>
		public static readonly global::System.Guid ImagenDomainRoleId = new global::System.Guid(0x7dfe0cc9, 0x103e, 0x4c9e, 0x91, 0x23, 0x2d, 0x08, 0xa9, 0xd3, 0x26, 0x8b);
		
		/// <summary>
		/// DomainRole Imagen
		/// Description for CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen.Imagen
		/// </summary>
		[DslDesign::DisplayNameResource("CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen/Imagen.DisplayName", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen/Imagen.Description", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "AplicacionIPK", PropertyDisplayNameKey="CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen/Imagen.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("7dfe0cc9-103e-4c9e-9123-2d08a9d3268b")]
		public virtual Imagen Imagen
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Imagen)DslModeling::DomainRoleInfo.GetRolePlayer(this, ImagenDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ImagenDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Imagen of a AplicacionIPK
		/// <summary>
		/// Gets a list of Imagen.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Imagen> GetImagen(AplicacionIPK element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Imagen>, Imagen>(element, AplicacionIPKDomainRoleId);
		}
		#endregion
		#region AplicacionIPK link accessor
		/// <summary>
		/// Get the list of AplicacionIPKHasImagen links to a AplicacionIPK.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen> GetLinksToImagen ( global::CE.DGH_DGC_SOM_IKP.AplicacionIPK aplicacionIPKInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen>(aplicacionIPKInstance, global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen.AplicacionIPKDomainRoleId);
		}
		#endregion
		#region Imagen link accessor
		/// <summary>
		/// Get the AplicacionIPKHasImagen link to a Imagen.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen GetLinkToAplicacionIPK (global::CE.DGH_DGC_SOM_IKP.Imagen imagenInstance)
		{
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen>(imagenInstance, global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen.ImagenDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Imagen not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region AplicacionIPKHasImagen instance accessors
		
		/// <summary>
		/// Get any AplicacionIPKHasImagen links between a given AplicacionIPK and a Imagen.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen> GetLinks( global::CE.DGH_DGC_SOM_IKP.AplicacionIPK source, global::CE.DGH_DGC_SOM_IKP.Imagen target )
		{
			global::System.Collections.Generic.List<global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen> outLinks = new global::System.Collections.Generic.List<global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen>();
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen>(source, global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen.AplicacionIPKDomainRoleId);
			foreach ( global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen link in links )
			{
				if ( target.Equals(link.Imagen) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one AplicacionIPKHasImagen link between a given AplicacionIPKand a Imagen.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen GetLink( global::CE.DGH_DGC_SOM_IKP.AplicacionIPK source, global::CE.DGH_DGC_SOM_IKP.Imagen target )
		{
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen>(source, global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen.AplicacionIPKDomainRoleId);
			foreach ( global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasImagen link in links )
			{
				if ( target.Equals(link.Imagen) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace CE.DGH_DGC_SOM_IKP
{
	/// <summary>
	/// DomainRelationship ImagenReferencesPrograma
	/// Description for CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma
	/// </summary>
	[DslDesign::DisplayNameResource("CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma.DisplayName", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma.Description", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("96733f5f-ba47-4fab-a34c-22c4d3846946")]
	public partial class ImagenReferencesPrograma : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ImagenReferencesPrograma domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x96733f5f, 0xba47, 0x4fab, 0xa3, 0x4c, 0x22, 0xc4, 0xd3, 0x84, 0x69, 0x46);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ImagenReferencesPrograma link in the same Partition as the given Imagen
		/// </summary>
		/// <param name="source">Imagen to use as the source of the relationship.</param>
		/// <param name="target">Programa to use as the target of the relationship.</param>
		public ImagenReferencesPrograma(Imagen source, Programa target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ImagenReferencesPrograma.ImagenDomainRoleId, source), new DslModeling::RoleAssignment(ImagenReferencesPrograma.ProgramaDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ImagenReferencesPrograma(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ImagenReferencesPrograma(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ImagenReferencesPrograma(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ImagenReferencesPrograma(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Imagen domain role code
		
		/// <summary>
		/// Imagen domain role Id.
		/// </summary>
		public static readonly global::System.Guid ImagenDomainRoleId = new global::System.Guid(0xa0ac96ea, 0x1456, 0x425d, 0xa1, 0xcc, 0x08, 0x16, 0xe9, 0x03, 0xca, 0x7a);
		
		/// <summary>
		/// DomainRole Imagen
		/// Description for CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma.Imagen
		/// </summary>
		[DslDesign::DisplayNameResource("CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma/Imagen.DisplayName", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma/Imagen.Description", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Programa", PropertyDisplayNameKey="CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma/Imagen.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("a0ac96ea-1456-425d-a1cc-0816e903ca7a")]
		public virtual Imagen Imagen
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Imagen)DslModeling::DomainRoleInfo.GetRolePlayer(this, ImagenDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ImagenDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Imagen of a Programa
		/// <summary>
		/// Gets Imagen.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Imagen GetImagen(Programa element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ProgramaDomainRoleId) as Imagen;
		}
		
		/// <summary>
		/// Sets Imagen.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetImagen(Programa element, Imagen newImagen)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ProgramaDomainRoleId, newImagen);
		}
		#endregion
		#region Programa domain role code
		
		/// <summary>
		/// Programa domain role Id.
		/// </summary>
		public static readonly global::System.Guid ProgramaDomainRoleId = new global::System.Guid(0xbf3f3977, 0x8b59, 0x480c, 0x9a, 0xb0, 0x1e, 0x7f, 0xcb, 0xbb, 0x0a, 0x94);
		
		/// <summary>
		/// DomainRole Programa
		/// Description for CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma.Programa
		/// </summary>
		[DslDesign::DisplayNameResource("CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma/Programa.DisplayName", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma/Programa.Description", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Imagen", PropertyDisplayNameKey="CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma/Programa.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("bf3f3977-8b59-480c-9ab0-1e7fcbbb0a94")]
		public virtual Programa Programa
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Programa)DslModeling::DomainRoleInfo.GetRolePlayer(this, ProgramaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ProgramaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Programa of a Imagen
		/// <summary>
		/// Gets Programa.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Programa GetPrograma(Imagen element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ImagenDomainRoleId) as Programa;
		}
		
		/// <summary>
		/// Sets Programa.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetPrograma(Imagen element, Programa newPrograma)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ImagenDomainRoleId, newPrograma);
		}
		#endregion
		#region Imagen link accessor
		/// <summary>
		/// Get the ImagenReferencesPrograma link to a Imagen.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma GetLinkToPrograma (global::CE.DGH_DGC_SOM_IKP.Imagen imagenInstance)
		{
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma>(imagenInstance, global::CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma.ImagenDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Imagen not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region Programa link accessor
		/// <summary>
		/// Get the ImagenReferencesPrograma link to a Programa.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma GetLinkToImagen (global::CE.DGH_DGC_SOM_IKP.Programa programaInstance)
		{
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma>(programaInstance, global::CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma.ProgramaDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Programa not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region ImagenReferencesPrograma instance accessors
		
		/// <summary>
		/// Get any ImagenReferencesPrograma links between a given Imagen and a Programa.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma> GetLinks( global::CE.DGH_DGC_SOM_IKP.Imagen source, global::CE.DGH_DGC_SOM_IKP.Programa target )
		{
			global::System.Collections.Generic.List<global::CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma> outLinks = new global::System.Collections.Generic.List<global::CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma>();
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma>(source, global::CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma.ImagenDomainRoleId);
			foreach ( global::CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma link in links )
			{
				if ( target.Equals(link.Programa) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ImagenReferencesPrograma link between a given Imagenand a Programa.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma GetLink( global::CE.DGH_DGC_SOM_IKP.Imagen source, global::CE.DGH_DGC_SOM_IKP.Programa target )
		{
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma>(source, global::CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma.ImagenDomainRoleId);
			foreach ( global::CE.DGH_DGC_SOM_IKP.ImagenReferencesPrograma link in links )
			{
				if ( target.Equals(link.Programa) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace CE.DGH_DGC_SOM_IKP
{
	/// <summary>
	/// DomainRelationship InsRepetirReferencesSubprograma
	/// Description for CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma
	/// </summary>
	[DslDesign::DisplayNameResource("CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma.DisplayName", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma.Description", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("91157325-5bc2-422f-bc8b-b0e35c234c20")]
	public partial class InsRepetirReferencesSubprograma : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// InsRepetirReferencesSubprograma domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x91157325, 0x5bc2, 0x422f, 0xbc, 0x8b, 0xb0, 0xe3, 0x5c, 0x23, 0x4c, 0x20);
	
				
		/// <summary>
		/// Constructor
		/// Creates a InsRepetirReferencesSubprograma link in the same Partition as the given InsRepetir
		/// </summary>
		/// <param name="source">InsRepetir to use as the source of the relationship.</param>
		/// <param name="target">Subprograma to use as the target of the relationship.</param>
		public InsRepetirReferencesSubprograma(InsRepetir source, Subprograma target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(InsRepetirReferencesSubprograma.InsRepetirDomainRoleId, source), new DslModeling::RoleAssignment(InsRepetirReferencesSubprograma.SubprogramaDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public InsRepetirReferencesSubprograma(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public InsRepetirReferencesSubprograma(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public InsRepetirReferencesSubprograma(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public InsRepetirReferencesSubprograma(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region InsRepetir domain role code
		
		/// <summary>
		/// InsRepetir domain role Id.
		/// </summary>
		public static readonly global::System.Guid InsRepetirDomainRoleId = new global::System.Guid(0x389bdd0f, 0x9e0c, 0x490b, 0x98, 0x37, 0x25, 0x2c, 0xa2, 0xbd, 0xa1, 0x0e);
		
		/// <summary>
		/// DomainRole InsRepetir
		/// Description for CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma.InsRepetir
		/// </summary>
		[DslDesign::DisplayNameResource("CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma/InsRepetir.DisplayName", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma/InsRepetir.Description", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Subprograma", PropertyDisplayNameKey="CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma/InsRepetir.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("389bdd0f-9e0c-490b-9837-252ca2bda10e")]
		public virtual InsRepetir InsRepetir
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (InsRepetir)DslModeling::DomainRoleInfo.GetRolePlayer(this, InsRepetirDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, InsRepetirDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access InsRepetir of a Subprograma
		/// <summary>
		/// Gets InsRepetir.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static InsRepetir GetInsRepetir(Subprograma element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, SubprogramaDomainRoleId) as InsRepetir;
		}
		
		/// <summary>
		/// Sets InsRepetir.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetInsRepetir(Subprograma element, InsRepetir newInsRepetir)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, SubprogramaDomainRoleId, newInsRepetir);
		}
		#endregion
		#region Subprograma domain role code
		
		/// <summary>
		/// Subprograma domain role Id.
		/// </summary>
		public static readonly global::System.Guid SubprogramaDomainRoleId = new global::System.Guid(0x4c6ea785, 0x4e43, 0x417f, 0xbe, 0xc4, 0x2d, 0xec, 0x3a, 0xaa, 0xef, 0x0a);
		
		/// <summary>
		/// DomainRole Subprograma
		/// Description for CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma.Subprograma
		/// </summary>
		[DslDesign::DisplayNameResource("CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma/Subprograma.DisplayName", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma/Subprograma.Description", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "InsRepetir", PropertyDisplayNameKey="CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma/Subprograma.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("4c6ea785-4e43-417f-bec4-2dec3aaaef0a")]
		public virtual Subprograma Subprograma
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Subprograma)DslModeling::DomainRoleInfo.GetRolePlayer(this, SubprogramaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, SubprogramaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Subprograma of a InsRepetir
		/// <summary>
		/// Gets Subprograma.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Subprograma GetSubprograma(InsRepetir element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, InsRepetirDomainRoleId) as Subprograma;
		}
		
		/// <summary>
		/// Sets Subprograma.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetSubprograma(InsRepetir element, Subprograma newSubprograma)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, InsRepetirDomainRoleId, newSubprograma);
		}
		#endregion
		#region InsRepetir link accessor
		/// <summary>
		/// Get the InsRepetirReferencesSubprograma link to a InsRepetir.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma GetLinkToSubprograma (global::CE.DGH_DGC_SOM_IKP.InsRepetir insRepetirInstance)
		{
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma>(insRepetirInstance, global::CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma.InsRepetirDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of InsRepetir not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region Subprograma link accessor
		/// <summary>
		/// Get the InsRepetirReferencesSubprograma link to a Subprograma.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma GetLinkToInsRepetir (global::CE.DGH_DGC_SOM_IKP.Subprograma subprogramaInstance)
		{
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma>(subprogramaInstance, global::CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma.SubprogramaDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Subprograma not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region InsRepetirReferencesSubprograma instance accessors
		
		/// <summary>
		/// Get any InsRepetirReferencesSubprograma links between a given InsRepetir and a Subprograma.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma> GetLinks( global::CE.DGH_DGC_SOM_IKP.InsRepetir source, global::CE.DGH_DGC_SOM_IKP.Subprograma target )
		{
			global::System.Collections.Generic.List<global::CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma> outLinks = new global::System.Collections.Generic.List<global::CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma>();
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma>(source, global::CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma.InsRepetirDomainRoleId);
			foreach ( global::CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma link in links )
			{
				if ( target.Equals(link.Subprograma) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one InsRepetirReferencesSubprograma link between a given InsRepetirand a Subprograma.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma GetLink( global::CE.DGH_DGC_SOM_IKP.InsRepetir source, global::CE.DGH_DGC_SOM_IKP.Subprograma target )
		{
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma>(source, global::CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma.InsRepetirDomainRoleId);
			foreach ( global::CE.DGH_DGC_SOM_IKP.InsRepetirReferencesSubprograma link in links )
			{
				if ( target.Equals(link.Subprograma) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace CE.DGH_DGC_SOM_IKP
{
	/// <summary>
	/// DomainRelationship AplicacionIPKHasConjInstr
	/// Description for CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr
	/// </summary>
	[DslDesign::DisplayNameResource("CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr.DisplayName", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr.Description", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("3c405c82-ff0a-49fe-9913-1b22ccd8056d")]
	public partial class AplicacionIPKHasConjInstr : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// AplicacionIPKHasConjInstr domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x3c405c82, 0xff0a, 0x49fe, 0x99, 0x13, 0x1b, 0x22, 0xcc, 0xd8, 0x05, 0x6d);
	
				
		/// <summary>
		/// Constructor
		/// Creates a AplicacionIPKHasConjInstr link in the same Partition as the given AplicacionIPK
		/// </summary>
		/// <param name="source">AplicacionIPK to use as the source of the relationship.</param>
		/// <param name="target">ConjInstr to use as the target of the relationship.</param>
		public AplicacionIPKHasConjInstr(AplicacionIPK source, ConjInstr target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(AplicacionIPKHasConjInstr.AplicacionIPKDomainRoleId, source), new DslModeling::RoleAssignment(AplicacionIPKHasConjInstr.ConjInstrDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public AplicacionIPKHasConjInstr(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public AplicacionIPKHasConjInstr(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public AplicacionIPKHasConjInstr(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public AplicacionIPKHasConjInstr(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region AplicacionIPK domain role code
		
		/// <summary>
		/// AplicacionIPK domain role Id.
		/// </summary>
		public static readonly global::System.Guid AplicacionIPKDomainRoleId = new global::System.Guid(0x457e9b55, 0x3f2c, 0x4278, 0x93, 0x09, 0x21, 0x5f, 0xdf, 0x3c, 0x3d, 0x76);
		
		/// <summary>
		/// DomainRole AplicacionIPK
		/// Description for CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr.AplicacionIPK
		/// </summary>
		[DslDesign::DisplayNameResource("CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr/AplicacionIPK.DisplayName", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr/AplicacionIPK.Description", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "ConjInstr", PropertyDisplayNameKey="CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr/AplicacionIPK.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("457e9b55-3f2c-4278-9309-215fdf3c3d76")]
		public virtual AplicacionIPK AplicacionIPK
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (AplicacionIPK)DslModeling::DomainRoleInfo.GetRolePlayer(this, AplicacionIPKDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, AplicacionIPKDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access AplicacionIPK of a ConjInstr
		/// <summary>
		/// Gets AplicacionIPK.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static AplicacionIPK GetAplicacionIPK(ConjInstr element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ConjInstrDomainRoleId) as AplicacionIPK;
		}
		
		/// <summary>
		/// Sets AplicacionIPK.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetAplicacionIPK(ConjInstr element, AplicacionIPK newAplicacionIPK)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ConjInstrDomainRoleId, newAplicacionIPK);
		}
		#endregion
		#region ConjInstr domain role code
		
		/// <summary>
		/// ConjInstr domain role Id.
		/// </summary>
		public static readonly global::System.Guid ConjInstrDomainRoleId = new global::System.Guid(0x5fd23919, 0xbed8, 0x4546, 0xba, 0x81, 0xea, 0x3c, 0xa7, 0xa0, 0xa0, 0xc7);
		
		/// <summary>
		/// DomainRole ConjInstr
		/// Description for CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr.ConjInstr
		/// </summary>
		[DslDesign::DisplayNameResource("CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr/ConjInstr.DisplayName", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr/ConjInstr.Description", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "AplicacionIPK", PropertyDisplayNameKey="CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr/ConjInstr.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("5fd23919-bed8-4546-ba81-ea3ca7a0a0c7")]
		public virtual ConjInstr ConjInstr
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ConjInstr)DslModeling::DomainRoleInfo.GetRolePlayer(this, ConjInstrDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ConjInstrDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ConjInstr of a AplicacionIPK
		/// <summary>
		/// Gets a list of ConjInstr.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<ConjInstr> GetConjInstr(AplicacionIPK element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<ConjInstr>, ConjInstr>(element, AplicacionIPKDomainRoleId);
		}
		#endregion
		#region AplicacionIPK link accessor
		/// <summary>
		/// Get the list of AplicacionIPKHasConjInstr links to a AplicacionIPK.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr> GetLinksToConjInstr ( global::CE.DGH_DGC_SOM_IKP.AplicacionIPK aplicacionIPKInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr>(aplicacionIPKInstance, global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr.AplicacionIPKDomainRoleId);
		}
		#endregion
		#region ConjInstr link accessor
		/// <summary>
		/// Get the AplicacionIPKHasConjInstr link to a ConjInstr.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr GetLinkToAplicacionIPK (global::CE.DGH_DGC_SOM_IKP.ConjInstr conjInstrInstance)
		{
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr>(conjInstrInstance, global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr.ConjInstrDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of ConjInstr not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region AplicacionIPKHasConjInstr instance accessors
		
		/// <summary>
		/// Get any AplicacionIPKHasConjInstr links between a given AplicacionIPK and a ConjInstr.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr> GetLinks( global::CE.DGH_DGC_SOM_IKP.AplicacionIPK source, global::CE.DGH_DGC_SOM_IKP.ConjInstr target )
		{
			global::System.Collections.Generic.List<global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr> outLinks = new global::System.Collections.Generic.List<global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr>();
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr>(source, global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr.AplicacionIPKDomainRoleId);
			foreach ( global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr link in links )
			{
				if ( target.Equals(link.ConjInstr) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one AplicacionIPKHasConjInstr link between a given AplicacionIPKand a ConjInstr.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr GetLink( global::CE.DGH_DGC_SOM_IKP.AplicacionIPK source, global::CE.DGH_DGC_SOM_IKP.ConjInstr target )
		{
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr>(source, global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr.AplicacionIPKDomainRoleId);
			foreach ( global::CE.DGH_DGC_SOM_IKP.AplicacionIPKHasConjInstr link in links )
			{
				if ( target.Equals(link.ConjInstr) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace CE.DGH_DGC_SOM_IKP
{
	/// <summary>
	/// DomainRelationship InstruccionIntermediasReferencesInstruccion
	/// Description for CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion
	/// </summary>
	[DslDesign::DisplayNameResource("CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion.DisplayName", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion.Description", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("05582f71-e767-4a45-8c34-3487c498822d")]
	public partial class InstruccionIntermediasReferencesInstruccion : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// InstruccionIntermediasReferencesInstruccion domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x05582f71, 0xe767, 0x4a45, 0x8c, 0x34, 0x34, 0x87, 0xc4, 0x98, 0x82, 0x2d);
	
				
		/// <summary>
		/// Constructor
		/// Creates a InstruccionIntermediasReferencesInstruccion link in the same Partition as the given InstruccionIntermedias
		/// </summary>
		/// <param name="source">InstruccionIntermedias to use as the source of the relationship.</param>
		/// <param name="target">Instruccion to use as the target of the relationship.</param>
		public InstruccionIntermediasReferencesInstruccion(InstruccionIntermedias source, Instruccion target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(InstruccionIntermediasReferencesInstruccion.InstruccionIntermediasDomainRoleId, source), new DslModeling::RoleAssignment(InstruccionIntermediasReferencesInstruccion.InstruccionDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public InstruccionIntermediasReferencesInstruccion(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public InstruccionIntermediasReferencesInstruccion(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public InstruccionIntermediasReferencesInstruccion(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public InstruccionIntermediasReferencesInstruccion(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region InstruccionIntermedias domain role code
		
		/// <summary>
		/// InstruccionIntermedias domain role Id.
		/// </summary>
		public static readonly global::System.Guid InstruccionIntermediasDomainRoleId = new global::System.Guid(0xd52b8078, 0x2828, 0x4731, 0x86, 0x04, 0x2a, 0xc9, 0x4d, 0x8d, 0x09, 0xa0);
		
		/// <summary>
		/// DomainRole InstruccionIntermedias
		/// Description for
		/// CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion.InstruccionIntermedias
		/// </summary>
		[DslDesign::DisplayNameResource("CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion/InstruccionIntermedias.DisplayName", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion/InstruccionIntermedias.Description", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Instruccion", PropertyDisplayNameKey="CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion/InstruccionIntermedias.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroOne)]
		[DslModeling::DomainObjectId("d52b8078-2828-4731-8604-2ac94d8d09a0")]
		public virtual InstruccionIntermedias InstruccionIntermedias
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (InstruccionIntermedias)DslModeling::DomainRoleInfo.GetRolePlayer(this, InstruccionIntermediasDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, InstruccionIntermediasDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access InstruccionIntermedias of a Instruccion
		/// <summary>
		/// Gets InstruccionIntermedias.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static InstruccionIntermedias GetInstruccionIntermedias(Instruccion element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, InstruccionDomainRoleId) as InstruccionIntermedias;
		}
		
		/// <summary>
		/// Sets InstruccionIntermedias.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetInstruccionIntermedias(Instruccion element, InstruccionIntermedias newInstruccionIntermedias)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, InstruccionDomainRoleId, newInstruccionIntermedias);
		}
		#endregion
		#region Instruccion domain role code
		
		/// <summary>
		/// Instruccion domain role Id.
		/// </summary>
		public static readonly global::System.Guid InstruccionDomainRoleId = new global::System.Guid(0x130bf16b, 0x0d40, 0x405a, 0x9c, 0x96, 0x4d, 0xa1, 0xf1, 0x0c, 0xb7, 0xe0);
		
		/// <summary>
		/// DomainRole Instruccion
		/// Description for
		/// CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion.Instruccion
		/// </summary>
		[DslDesign::DisplayNameResource("CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion/Instruccion.DisplayName", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion/Instruccion.Description", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "InstruccionIntermedias", PropertyDisplayNameKey="CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion/Instruccion.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroOne)]
		[DslModeling::DomainObjectId("130bf16b-0d40-405a-9c96-4da1f10cb7e0")]
		public virtual Instruccion Instruccion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Instruccion)DslModeling::DomainRoleInfo.GetRolePlayer(this, InstruccionDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, InstruccionDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Instruccion of a InstruccionIntermedias
		/// <summary>
		/// Gets Instruccion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Instruccion GetInstruccion(InstruccionIntermedias element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, InstruccionIntermediasDomainRoleId) as Instruccion;
		}
		
		/// <summary>
		/// Sets Instruccion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetInstruccion(InstruccionIntermedias element, Instruccion newInstruccion)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, InstruccionIntermediasDomainRoleId, newInstruccion);
		}
		#endregion
		#region InstruccionIntermedias link accessor
		/// <summary>
		/// Get the InstruccionIntermediasReferencesInstruccion link to a InstruccionIntermedias.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion GetLinkToInstruccion (global::CE.DGH_DGC_SOM_IKP.InstruccionIntermedias instruccionIntermediasInstance)
		{
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion>(instruccionIntermediasInstance, global::CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion.InstruccionIntermediasDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of InstruccionIntermedias not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region Instruccion link accessor
		/// <summary>
		/// Get the InstruccionIntermediasReferencesInstruccion link to a Instruccion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion GetLinkToInstruccionIntermedias (global::CE.DGH_DGC_SOM_IKP.Instruccion instruccionInstance)
		{
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion>(instruccionInstance, global::CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion.InstruccionDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Instruccion not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region InstruccionIntermediasReferencesInstruccion instance accessors
		
		/// <summary>
		/// Get any InstruccionIntermediasReferencesInstruccion links between a given InstruccionIntermedias and a Instruccion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion> GetLinks( global::CE.DGH_DGC_SOM_IKP.InstruccionIntermedias source, global::CE.DGH_DGC_SOM_IKP.Instruccion target )
		{
			global::System.Collections.Generic.List<global::CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion> outLinks = new global::System.Collections.Generic.List<global::CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion>();
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion>(source, global::CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion.InstruccionIntermediasDomainRoleId);
			foreach ( global::CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion link in links )
			{
				if ( target.Equals(link.Instruccion) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one InstruccionIntermediasReferencesInstruccion link between a given InstruccionIntermediasand a Instruccion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion GetLink( global::CE.DGH_DGC_SOM_IKP.InstruccionIntermedias source, global::CE.DGH_DGC_SOM_IKP.Instruccion target )
		{
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion>(source, global::CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion.InstruccionIntermediasDomainRoleId);
			foreach ( global::CE.DGH_DGC_SOM_IKP.InstruccionIntermediasReferencesInstruccion link in links )
			{
				if ( target.Equals(link.Instruccion) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace CE.DGH_DGC_SOM_IKP
{
	/// <summary>
	/// DomainRelationship ConjInstrHasInicioPrograma
	/// Description for CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma
	/// </summary>
	[DslDesign::DisplayNameResource("CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma.DisplayName", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma.Description", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("25ca2e86-0679-4f35-9d01-535d3fa013b0")]
	public partial class ConjInstrHasInicioPrograma : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ConjInstrHasInicioPrograma domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x25ca2e86, 0x0679, 0x4f35, 0x9d, 0x01, 0x53, 0x5d, 0x3f, 0xa0, 0x13, 0xb0);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ConjInstrHasInicioPrograma link in the same Partition as the given ConjInstr
		/// </summary>
		/// <param name="source">ConjInstr to use as the source of the relationship.</param>
		/// <param name="target">InicioPrograma to use as the target of the relationship.</param>
		public ConjInstrHasInicioPrograma(ConjInstr source, InicioPrograma target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ConjInstrHasInicioPrograma.ConjInstrDomainRoleId, source), new DslModeling::RoleAssignment(ConjInstrHasInicioPrograma.InicioProgramaDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ConjInstrHasInicioPrograma(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ConjInstrHasInicioPrograma(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ConjInstrHasInicioPrograma(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ConjInstrHasInicioPrograma(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region ConjInstr domain role code
		
		/// <summary>
		/// ConjInstr domain role Id.
		/// </summary>
		public static readonly global::System.Guid ConjInstrDomainRoleId = new global::System.Guid(0x80f51714, 0xc7da, 0x4e78, 0x9e, 0x40, 0xb4, 0x1b, 0x86, 0xf2, 0xf2, 0xc8);
		
		/// <summary>
		/// DomainRole ConjInstr
		/// Description for CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma.ConjInstr
		/// </summary>
		[DslDesign::DisplayNameResource("CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma/ConjInstr.DisplayName", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma/ConjInstr.Description", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "InicioPrograma", PropertyDisplayNameKey="CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma/ConjInstr.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroOne)]
		[DslModeling::DomainObjectId("80f51714-c7da-4e78-9e40-b41b86f2f2c8")]
		public virtual ConjInstr ConjInstr
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ConjInstr)DslModeling::DomainRoleInfo.GetRolePlayer(this, ConjInstrDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ConjInstrDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ConjInstr of a InicioPrograma
		/// <summary>
		/// Gets ConjInstr.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static ConjInstr GetConjInstr(InicioPrograma element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, InicioProgramaDomainRoleId) as ConjInstr;
		}
		
		/// <summary>
		/// Sets ConjInstr.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetConjInstr(InicioPrograma element, ConjInstr newConjInstr)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, InicioProgramaDomainRoleId, newConjInstr);
		}
		#endregion
		#region InicioPrograma domain role code
		
		/// <summary>
		/// InicioPrograma domain role Id.
		/// </summary>
		public static readonly global::System.Guid InicioProgramaDomainRoleId = new global::System.Guid(0xf29e4215, 0x3d4e, 0x4f81, 0x92, 0xda, 0x2a, 0x3a, 0xa2, 0x08, 0xc3, 0xb2);
		
		/// <summary>
		/// DomainRole InicioPrograma
		/// Description for CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma.InicioPrograma
		/// </summary>
		[DslDesign::DisplayNameResource("CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma/InicioPrograma.DisplayName", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma/InicioPrograma.Description", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "ConjInstr", PropertyDisplayNameKey="CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma/InicioPrograma.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("f29e4215-3d4e-4f81-92da-2a3aa208c3b2")]
		public virtual InicioPrograma InicioPrograma
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (InicioPrograma)DslModeling::DomainRoleInfo.GetRolePlayer(this, InicioProgramaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, InicioProgramaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access InicioPrograma of a ConjInstr
		/// <summary>
		/// Gets InicioPrograma.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static InicioPrograma GetInicioPrograma(ConjInstr element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ConjInstrDomainRoleId) as InicioPrograma;
		}
		
		/// <summary>
		/// Sets InicioPrograma.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetInicioPrograma(ConjInstr element, InicioPrograma newInicioPrograma)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ConjInstrDomainRoleId, newInicioPrograma);
		}
		#endregion
		#region ConjInstr link accessor
		/// <summary>
		/// Get the ConjInstrHasInicioPrograma link to a ConjInstr.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma GetLinkToInicioPrograma (global::CE.DGH_DGC_SOM_IKP.ConjInstr conjInstrInstance)
		{
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma>(conjInstrInstance, global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma.ConjInstrDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of ConjInstr not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region InicioPrograma link accessor
		/// <summary>
		/// Get the ConjInstrHasInicioPrograma link to a InicioPrograma.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma GetLinkToConjInstr (global::CE.DGH_DGC_SOM_IKP.InicioPrograma inicioProgramaInstance)
		{
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma>(inicioProgramaInstance, global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma.InicioProgramaDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of InicioPrograma not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region ConjInstrHasInicioPrograma instance accessors
		
		/// <summary>
		/// Get any ConjInstrHasInicioPrograma links between a given ConjInstr and a InicioPrograma.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma> GetLinks( global::CE.DGH_DGC_SOM_IKP.ConjInstr source, global::CE.DGH_DGC_SOM_IKP.InicioPrograma target )
		{
			global::System.Collections.Generic.List<global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma> outLinks = new global::System.Collections.Generic.List<global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma>();
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma>(source, global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma.ConjInstrDomainRoleId);
			foreach ( global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma link in links )
			{
				if ( target.Equals(link.InicioPrograma) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ConjInstrHasInicioPrograma link between a given ConjInstrand a InicioPrograma.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma GetLink( global::CE.DGH_DGC_SOM_IKP.ConjInstr source, global::CE.DGH_DGC_SOM_IKP.InicioPrograma target )
		{
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma>(source, global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma.ConjInstrDomainRoleId);
			foreach ( global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInicioPrograma link in links )
			{
				if ( target.Equals(link.InicioPrograma) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace CE.DGH_DGC_SOM_IKP
{
	/// <summary>
	/// DomainRelationship ConjInstrHasInstruccion
	/// Description for CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion
	/// </summary>
	[DslDesign::DisplayNameResource("CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion.DisplayName", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion.Description", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("b5d44492-49a8-4a97-9aa7-0c55c91c5350")]
	public partial class ConjInstrHasInstruccion : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ConjInstrHasInstruccion domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xb5d44492, 0x49a8, 0x4a97, 0x9a, 0xa7, 0x0c, 0x55, 0xc9, 0x1c, 0x53, 0x50);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ConjInstrHasInstruccion link in the same Partition as the given ConjInstr
		/// </summary>
		/// <param name="source">ConjInstr to use as the source of the relationship.</param>
		/// <param name="target">Instruccion to use as the target of the relationship.</param>
		public ConjInstrHasInstruccion(ConjInstr source, Instruccion target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ConjInstrHasInstruccion.ConjInstrDomainRoleId, source), new DslModeling::RoleAssignment(ConjInstrHasInstruccion.InstruccionDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ConjInstrHasInstruccion(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ConjInstrHasInstruccion(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ConjInstrHasInstruccion(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ConjInstrHasInstruccion(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region ConjInstr domain role code
		
		/// <summary>
		/// ConjInstr domain role Id.
		/// </summary>
		public static readonly global::System.Guid ConjInstrDomainRoleId = new global::System.Guid(0xa1b635c5, 0xad8e, 0x4a75, 0x9e, 0xc0, 0x50, 0xa5, 0xd3, 0x0a, 0x6c, 0x51);
		
		/// <summary>
		/// DomainRole ConjInstr
		/// Description for CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion.ConjInstr
		/// </summary>
		[DslDesign::DisplayNameResource("CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion/ConjInstr.DisplayName", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion/ConjInstr.Description", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Instruccion", PropertyDisplayNameKey="CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion/ConjInstr.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("a1b635c5-ad8e-4a75-9ec0-50a5d30a6c51")]
		public virtual ConjInstr ConjInstr
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ConjInstr)DslModeling::DomainRoleInfo.GetRolePlayer(this, ConjInstrDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ConjInstrDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ConjInstr of a Instruccion
		/// <summary>
		/// Gets ConjInstr.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static ConjInstr GetConjInstr(Instruccion element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, InstruccionDomainRoleId) as ConjInstr;
		}
		
		/// <summary>
		/// Sets ConjInstr.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetConjInstr(Instruccion element, ConjInstr newConjInstr)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, InstruccionDomainRoleId, newConjInstr);
		}
		#endregion
		#region Instruccion domain role code
		
		/// <summary>
		/// Instruccion domain role Id.
		/// </summary>
		public static readonly global::System.Guid InstruccionDomainRoleId = new global::System.Guid(0xaa3c8688, 0xa210, 0x4d20, 0xb5, 0xe3, 0x77, 0xd0, 0x78, 0xf6, 0xec, 0x40);
		
		/// <summary>
		/// DomainRole Instruccion
		/// Description for CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion.Instruccion
		/// </summary>
		[DslDesign::DisplayNameResource("CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion/Instruccion.DisplayName", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion/Instruccion.Description", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "ConjInstr", PropertyDisplayNameKey="CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion/Instruccion.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("aa3c8688-a210-4d20-b5e3-77d078f6ec40")]
		public virtual Instruccion Instruccion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Instruccion)DslModeling::DomainRoleInfo.GetRolePlayer(this, InstruccionDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, InstruccionDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Instruccion of a ConjInstr
		/// <summary>
		/// Gets a list of Instruccion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Instruccion> GetInstruccion(ConjInstr element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Instruccion>, Instruccion>(element, ConjInstrDomainRoleId);
		}
		#endregion
		#region ConjInstr link accessor
		/// <summary>
		/// Get the list of ConjInstrHasInstruccion links to a ConjInstr.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion> GetLinksToInstruccion ( global::CE.DGH_DGC_SOM_IKP.ConjInstr conjInstrInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion>(conjInstrInstance, global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion.ConjInstrDomainRoleId);
		}
		#endregion
		#region Instruccion link accessor
		/// <summary>
		/// Get the ConjInstrHasInstruccion link to a Instruccion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion GetLinkToConjInstr (global::CE.DGH_DGC_SOM_IKP.Instruccion instruccionInstance)
		{
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion>(instruccionInstance, global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion.InstruccionDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Instruccion not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region ConjInstrHasInstruccion instance accessors
		
		/// <summary>
		/// Get any ConjInstrHasInstruccion links between a given ConjInstr and a Instruccion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion> GetLinks( global::CE.DGH_DGC_SOM_IKP.ConjInstr source, global::CE.DGH_DGC_SOM_IKP.Instruccion target )
		{
			global::System.Collections.Generic.List<global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion> outLinks = new global::System.Collections.Generic.List<global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion>();
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion>(source, global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion.ConjInstrDomainRoleId);
			foreach ( global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion link in links )
			{
				if ( target.Equals(link.Instruccion) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ConjInstrHasInstruccion link between a given ConjInstrand a Instruccion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion GetLink( global::CE.DGH_DGC_SOM_IKP.ConjInstr source, global::CE.DGH_DGC_SOM_IKP.Instruccion target )
		{
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion>(source, global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion.ConjInstrDomainRoleId);
			foreach ( global::CE.DGH_DGC_SOM_IKP.ConjInstrHasInstruccion link in links )
			{
				if ( target.Equals(link.Instruccion) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace CE.DGH_DGC_SOM_IKP
{
	/// <summary>
	/// DomainRelationship InicioProgramaReferencesInstruccion
	/// Description for CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion
	/// </summary>
	[DslDesign::DisplayNameResource("CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion.DisplayName", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion.Description", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("c163744b-253f-43a1-af13-6ed550543714")]
	public partial class InicioProgramaReferencesInstruccion : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// InicioProgramaReferencesInstruccion domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xc163744b, 0x253f, 0x43a1, 0xaf, 0x13, 0x6e, 0xd5, 0x50, 0x54, 0x37, 0x14);
	
				
		/// <summary>
		/// Constructor
		/// Creates a InicioProgramaReferencesInstruccion link in the same Partition as the given InicioPrograma
		/// </summary>
		/// <param name="source">InicioPrograma to use as the source of the relationship.</param>
		/// <param name="target">Instruccion to use as the target of the relationship.</param>
		public InicioProgramaReferencesInstruccion(InicioPrograma source, Instruccion target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(InicioProgramaReferencesInstruccion.InicioProgramaDomainRoleId, source), new DslModeling::RoleAssignment(InicioProgramaReferencesInstruccion.InstruccionDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public InicioProgramaReferencesInstruccion(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public InicioProgramaReferencesInstruccion(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public InicioProgramaReferencesInstruccion(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public InicioProgramaReferencesInstruccion(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region InicioPrograma domain role code
		
		/// <summary>
		/// InicioPrograma domain role Id.
		/// </summary>
		public static readonly global::System.Guid InicioProgramaDomainRoleId = new global::System.Guid(0xbda656a8, 0xc59e, 0x4dca, 0xa2, 0xb4, 0x2e, 0x62, 0xcc, 0x7a, 0x6f, 0x5c);
		
		/// <summary>
		/// DomainRole InicioPrograma
		/// Description for
		/// CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion.InicioPrograma
		/// </summary>
		[DslDesign::DisplayNameResource("CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion/InicioPrograma.DisplayName", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion/InicioPrograma.Description", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Instruccion", PropertyDisplayNameKey="CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion/InicioPrograma.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroOne)]
		[DslModeling::DomainObjectId("bda656a8-c59e-4dca-a2b4-2e62cc7a6f5c")]
		public virtual InicioPrograma InicioPrograma
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (InicioPrograma)DslModeling::DomainRoleInfo.GetRolePlayer(this, InicioProgramaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, InicioProgramaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access InicioPrograma of a Instruccion
		/// <summary>
		/// Gets InicioPrograma.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static InicioPrograma GetInicioPrograma(Instruccion element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, InstruccionDomainRoleId) as InicioPrograma;
		}
		
		/// <summary>
		/// Sets InicioPrograma.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetInicioPrograma(Instruccion element, InicioPrograma newInicioPrograma)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, InstruccionDomainRoleId, newInicioPrograma);
		}
		#endregion
		#region Instruccion domain role code
		
		/// <summary>
		/// Instruccion domain role Id.
		/// </summary>
		public static readonly global::System.Guid InstruccionDomainRoleId = new global::System.Guid(0x9523f804, 0x2d37, 0x4e89, 0x9d, 0x04, 0xa2, 0xb7, 0xb9, 0x05, 0x44, 0x0b);
		
		/// <summary>
		/// DomainRole Instruccion
		/// Description for
		/// CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion.Instruccion
		/// </summary>
		[DslDesign::DisplayNameResource("CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion/Instruccion.DisplayName", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion/Instruccion.Description", typeof(global::CE.DGH_DGC_SOM_IKP.DGH_DGC_SOM_IKPDomainModel), "CE.DGH_DGC_SOM_IKP.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "InicioPrograma", PropertyDisplayNameKey="CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion/Instruccion.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("9523f804-2d37-4e89-9d04-a2b7b905440b")]
		public virtual Instruccion Instruccion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Instruccion)DslModeling::DomainRoleInfo.GetRolePlayer(this, InstruccionDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, InstruccionDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Instruccion of a InicioPrograma
		/// <summary>
		/// Gets Instruccion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Instruccion GetInstruccion(InicioPrograma element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, InicioProgramaDomainRoleId) as Instruccion;
		}
		
		/// <summary>
		/// Sets Instruccion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetInstruccion(InicioPrograma element, Instruccion newInstruccion)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, InicioProgramaDomainRoleId, newInstruccion);
		}
		#endregion
		#region InicioPrograma link accessor
		/// <summary>
		/// Get the InicioProgramaReferencesInstruccion link to a InicioPrograma.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion GetLinkToInstruccion (global::CE.DGH_DGC_SOM_IKP.InicioPrograma inicioProgramaInstance)
		{
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion>(inicioProgramaInstance, global::CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion.InicioProgramaDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of InicioPrograma not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region Instruccion link accessor
		/// <summary>
		/// Get the InicioProgramaReferencesInstruccion link to a Instruccion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion GetLinkToInicioPrograma (global::CE.DGH_DGC_SOM_IKP.Instruccion instruccionInstance)
		{
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion>(instruccionInstance, global::CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion.InstruccionDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Instruccion not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region InicioProgramaReferencesInstruccion instance accessors
		
		/// <summary>
		/// Get any InicioProgramaReferencesInstruccion links between a given InicioPrograma and a Instruccion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion> GetLinks( global::CE.DGH_DGC_SOM_IKP.InicioPrograma source, global::CE.DGH_DGC_SOM_IKP.Instruccion target )
		{
			global::System.Collections.Generic.List<global::CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion> outLinks = new global::System.Collections.Generic.List<global::CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion>();
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion>(source, global::CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion.InicioProgramaDomainRoleId);
			foreach ( global::CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion link in links )
			{
				if ( target.Equals(link.Instruccion) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one InicioProgramaReferencesInstruccion link between a given InicioProgramaand a Instruccion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion GetLink( global::CE.DGH_DGC_SOM_IKP.InicioPrograma source, global::CE.DGH_DGC_SOM_IKP.Instruccion target )
		{
			global::System.Collections.Generic.IList<global::CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion> links = DslModeling::DomainRoleInfo.GetElementLinks<global::CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion>(source, global::CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion.InicioProgramaDomainRoleId);
			foreach ( global::CE.DGH_DGC_SOM_IKP.InicioProgramaReferencesInstruccion link in links )
			{
				if ( target.Equals(link.Instruccion) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
